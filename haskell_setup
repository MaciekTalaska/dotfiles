#! /usr/bin/env bash

HASKELL_DIR=$HOME/mybin
GITHUB_REPO=https://api.github.com/repos/commercialhaskell/stack/releases/latest
platform=x86_64-static.tar.gz
STACK_EXEC=stack

print_help() {
    echo "haskell_setup - installing haskell toolset using 'stack'*"
    echo ""
    echo "Usage: "
    echo "  haskell_setup <install|uninstall>"
    echo ""
    echo "Examples:"
    echo "haskell_setup install"
    echo "  installs stack & haskell toolset*"
    echo "haskell_setup uninstall - removes stack & haskell toolset*"
    echo ""
    echo "haskell_toolset: ghc ghci ghc-pkg haddock runghc runhaskell "
}

create_executables() {
    for var in "$@"
    do
        (create_simple_executable $var)
    done
}

create_simple_executable() {
# this is inspired by part of asdf-haskell: https://github.com/vic/asdf-haskell
    echo "creating $HASKELL_DIR/$1..."
    echo "#!/usr/bin/env bash" | sudo tee --append $HASKELL_DIR/$1 > /dev/null
    echo "exec $HASKELL_DIR/stack exec $1 -- \$*" | sudo tee --append $HASKELL_DIR/$1  > /dev/null
    sudo chmod +x $HASKELL_DIR/$1
}

remove_haskell_links() {
    for var in "$@"
    do
        (remove_single_file $var)
    done
}

remove_single_file() {
    echo "removing $HASKELL_DIR/$1..."
    sudo rm $HASKELL_DIR/$1
}

implode() {
    #echo "this COMPLETELY removes .stack & haskell toolset"
    # 1. remove scripts calling stack with params
    remove_haskell_links ghc ghci ghc-pkg haddock runghc runhaskell
    # 2. remove .stack
    # todo
}


get_stack() {
    local output="stack-"$platform
    match="http.*$platform$"

    release_info=$(curl -s $GITHUB_REPO)
    url=$(echo "$release_info" | jq -r --arg m "$match" '.assets[].browser_download_url | match($m)| .string')
    wget $url -q - --show-progress --output-document=$output
    tar -xf $output --strip 1 --wildcards --no-anchored $STACK_EXEC
    rm $output
    mv $STACK_EXEC $HASKELL_DIR/$STACK_EXEC 
}

install() {
    get_stack
    create_executables ghc ghci ghc-pkg haddock runghc runhaskell 
}

case "$1" in 
    "install" ) install ;;
    "uninstall" ) implode ;;
    * ) print_help ;;
esac

